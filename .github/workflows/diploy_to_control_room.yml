name: Test and Deploy Code to Rorcorb control room

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Install Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.10"
          auto-update-conda: true
          channels: conda-forge
    
      - name: Update Conda environment
        run: conda env update --file conda.yaml --name myenv


      - name: Install RCC
        run: |
          curl -o rcc https://downloads.robocorp.com/rcc/releases/v17.18.0/linux64/rcc
          chmod +x rcc
          sudo mv rcc /usr/local/bin/

      - name: Log in to Robocorp
        run: |
          rcc configure credentials ${{ secrets.ROBOCORP_ACCESS_CRED }} --account ${{ secrets.ROBOCORP_USER_ACCOUNT_ID }}

      - name: Upload to Control Room
        env:
          ROBOCLOUD_API_KEY: ${{ secrets.ROBOCORP_API_KEY }}
        run: |
          # Only proceed if the robot was created or if it already existed
          # Extract the robot ID from the output JSON
          ROBOT_ID=${{ secrets.ROBOCORP_ROBOT_ID }}
          # Push the robot to Robocorp Control Room using the retrieved robot ID
          rcc cloud push -d . -r $ROBOT_ID -w ${{ secrets.ROBOCORP_WORKSPACE_ID }}
          # Capture the exit code of the previous command
          EXIT_CODE=$?
          # Provide feedback based on the exit code
          if [ $EXIT_CODE -eq 0 ]; then
            echo "Robocloud process completed successfully."
          else
            echo "Robocloud process failed with exit code $EXIT_CODE."
            exit $EXIT_CODE
          fi
    
      
    